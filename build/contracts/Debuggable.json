{
  "contractName": "Debuggable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "message",
          "type": "string"
        }
      ],
      "name": "DebugEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "message",
          "type": "string"
        }
      ],
      "name": "debug",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode":
    "0x6060604052341561000f57600080fd5b61016e8061001e6000396000f300606060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632f50fbfa14610046575b600080fd5b341561005157600080fd5b6100a1600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506100a3565b005b7f56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679816040518080602001828103825283818151815260200191508051906020019080838360005b838110156101055780820151818401526020810190506100ea565b50505050905090810190601f1680156101325780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505600a165627a7a723058205a706345d9de690c7d90fb34ce310b0eb04a27a43cde5658d06c71b711a2a5d40029",
  "deployedBytecode":
    "0x606060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632f50fbfa14610046575b600080fd5b341561005157600080fd5b6100a1600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506100a3565b005b7f56f074d292557f2e3c567d982816e0fb5b72100ff196892f8fbd23b8a9073679816040518080602001828103825283818151815260200191508051906020019080838360005b838110156101055780820151818401526020810190506100ea565b50505050905090810190601f1680156101325780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505600a165627a7a723058205a706345d9de690c7d90fb34ce310b0eb04a27a43cde5658d06c71b711a2a5d40029",
  "sourceMap": "325:366:0:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap":
    "325:366:0:-;;;;;;;;;;;;;;;;;;;;;;;;620:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;664:19;675:7;664:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:68:0;:::o",
  "source":
    "pragma solidity ^0.4.18;\n\n/**\n@title Debuggable\n@dev Contract that's meant to be extended in other contracts to give them\na debug event to test the code with. Just import, \"SampleContract is Debuggable\"\nand then in the SampleContract, writing debug(\"event\") will write an event in the blockchain.\n\n@author Convoluted Labs\n*/\ncontract Debuggable {\n\n  /**\n  @dev The triggerable debug event\n  @param message string that's written in the blockchain\n  */\n  event DebugEvent(string message);\n\n  /**\n  @dev Debug function that gets injected to extending contracts\n  @param message the message that we want to log/debug\n  */\n  function debug(string message) public {\n    DebugEvent(message);\n  }\n\n}\n",
  "sourcePath":
    "/home/jani/dev/blockchain/vanilla-platform/contracts/Debuggable.sol",
  "ast": {
    "attributes": {
      "absolutePath":
        "/home/jani/dev/blockchain/vanilla-platform/contracts/Debuggable.sol",
      "exportedSymbols": {
        "Debuggable": [16]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": ["solidity", "^", "0.4", ".18"]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "attributes": {
          "baseContracts": [null],
          "contractDependencies": [null],
          "contractKind": "contract",
          "documentation":
            "@title Debuggable\n@dev Contract that's meant to be extended in other contracts to give them\na debug event to test the code with. Just import, \"SampleContract is Debuggable\"\nand then in the SampleContract, writing debug(\"event\") will write an event in the blockchain.\n@author Convoluted Labs",
          "fullyImplemented": true,
          "linearizedBaseContracts": [16],
          "name": "Debuggable",
          "scope": 17
        },
        "children": [
          {
            "attributes": {
              "anonymous": false,
              "name": "DebugEvent"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "message",
                      "scope": 5,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string memory",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string storage pointer"
                        },
                        "id": 2,
                        "name": "ElementaryTypeName",
                        "src": "470:6:0"
                      }
                    ],
                    "id": 3,
                    "name": "VariableDeclaration",
                    "src": "470:14:0"
                  }
                ],
                "id": 4,
                "name": "ParameterList",
                "src": "469:16:0"
              }
            ],
            "id": 5,
            "name": "EventDefinition",
            "src": "453:33:0"
          },
          {
            "attributes": {
              "constant": false,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [null],
              "name": "debug",
              "payable": false,
              "scope": 16,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "message",
                      "scope": 15,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string memory",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string storage pointer"
                        },
                        "id": 6,
                        "name": "ElementaryTypeName",
                        "src": "635:6:0"
                      }
                    ],
                    "id": 7,
                    "name": "VariableDeclaration",
                    "src": "635:14:0"
                  }
                ],
                "id": 8,
                "name": "ParameterList",
                "src": "634:16:0"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 9,
                "name": "ParameterList",
                "src": "658:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 5,
                              "type": "function (string memory)",
                              "value": "DebugEvent"
                            },
                            "id": 10,
                            "name": "Identifier",
                            "src": "664:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 7,
                              "type": "string memory",
                              "value": "message"
                            },
                            "id": 11,
                            "name": "Identifier",
                            "src": "675:7:0"
                          }
                        ],
                        "id": 12,
                        "name": "FunctionCall",
                        "src": "664:19:0"
                      }
                    ],
                    "id": 13,
                    "name": "ExpressionStatement",
                    "src": "664:19:0"
                  }
                ],
                "id": 14,
                "name": "Block",
                "src": "658:30:0"
              }
            ],
            "id": 15,
            "name": "FunctionDefinition",
            "src": "620:68:0"
          }
        ],
        "id": 16,
        "name": "ContractDefinition",
        "src": "325:366:0"
      }
    ],
    "id": 17,
    "name": "SourceUnit",
    "src": "0:692:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "1.0.1",
  "updatedAt": "2018-02-23T09:05:43.076Z"
}
